[{"D:\\Citi\\Udemy_Business\\MERN_E-commerce_From_Scratch\\proshop\\frontend\\src\\index.js":"1","D:\\Citi\\Udemy_Business\\MERN_E-commerce_From_Scratch\\proshop\\frontend\\src\\reportWebVitals.js":"2","D:\\Citi\\Udemy_Business\\MERN_E-commerce_From_Scratch\\proshop\\frontend\\src\\store.js":"3","D:\\Citi\\Udemy_Business\\MERN_E-commerce_From_Scratch\\proshop\\frontend\\src\\App.js":"4","D:\\Citi\\Udemy_Business\\MERN_E-commerce_From_Scratch\\proshop\\frontend\\src\\components\\Footer.js":"5","D:\\Citi\\Udemy_Business\\MERN_E-commerce_From_Scratch\\proshop\\frontend\\src\\screens\\HomeScreen.js":"6","D:\\Citi\\Udemy_Business\\MERN_E-commerce_From_Scratch\\proshop\\frontend\\src\\components\\Header.js":"7","D:\\Citi\\Udemy_Business\\MERN_E-commerce_From_Scratch\\proshop\\frontend\\src\\screens\\ProductScreen.js":"8","D:\\Citi\\Udemy_Business\\MERN_E-commerce_From_Scratch\\proshop\\frontend\\src\\components\\Product.js":"9","D:\\Citi\\Udemy_Business\\MERN_E-commerce_From_Scratch\\proshop\\frontend\\src\\components\\Rating.js":"10","D:\\Citi\\Udemy_Business\\MERN_E-commerce_From_Scratch\\proshop\\frontend\\src\\reducers\\productReducers.js":"11","D:\\Citi\\Udemy_Business\\MERN_E-commerce_From_Scratch\\proshop\\frontend\\src\\constants\\productConstants.js":"12","D:\\Citi\\Udemy_Business\\MERN_E-commerce_From_Scratch\\proshop\\frontend\\src\\actions\\productActions.js":"13","D:\\Citi\\Udemy_Business\\MERN_E-commerce_From_Scratch\\proshop\\frontend\\src\\components\\Message.js":"14","D:\\Citi\\Udemy_Business\\MERN_E-commerce_From_Scratch\\proshop\\frontend\\src\\components\\Loader.js":"15","D:\\Citi\\Udemy_Business\\MERN_E-commerce_From_Scratch\\proshop\\frontend\\src\\screens\\CartScreen.js":"16","D:\\Citi\\Udemy_Business\\MERN_E-commerce_From_Scratch\\proshop\\frontend\\src\\reducers\\cartReducers.js":"17","D:\\Citi\\Udemy_Business\\MERN_E-commerce_From_Scratch\\proshop\\frontend\\src\\constants\\cartConstants.js":"18","D:\\Citi\\Udemy_Business\\MERN_E-commerce_From_Scratch\\proshop\\frontend\\src\\actions\\cartActions.js":"19","D:\\Citi\\Udemy_Business\\MERN_E-commerce_From_Scratch\\proshop\\frontend\\src\\reducers\\userReducers.js":"20","D:\\Citi\\Udemy_Business\\MERN_E-commerce_From_Scratch\\proshop\\frontend\\src\\constants\\userConstants.js":"21","D:\\Citi\\Udemy_Business\\MERN_E-commerce_From_Scratch\\proshop\\frontend\\src\\screens\\LoginScreen.js":"22","D:\\Citi\\Udemy_Business\\MERN_E-commerce_From_Scratch\\proshop\\frontend\\src\\components\\FormContainer.js":"23","D:\\Citi\\Udemy_Business\\MERN_E-commerce_From_Scratch\\proshop\\frontend\\src\\actions\\userActions.js":"24","D:\\Citi\\Udemy_Business\\MERN_E-commerce_From_Scratch\\proshop\\frontend\\src\\screens\\RegisterScreen.js":"25","D:\\Citi\\Udemy_Business\\MERN_E-commerce_From_Scratch\\proshop\\frontend\\src\\screens\\ProfileScreen.js":"26","D:\\Citi\\Udemy_Business\\MERN_E-commerce_From_Scratch\\proshop\\frontend\\src\\screens\\ShippingScreen.js":"27","D:\\Citi\\Udemy_Business\\MERN_E-commerce_From_Scratch\\proshop\\frontend\\src\\components\\CheckoutSteps.js":"28","D:\\Citi\\Udemy_Business\\MERN_E-commerce_From_Scratch\\proshop\\frontend\\src\\screens\\PaymentScreen.js":"29","D:\\Citi\\Udemy_Business\\MERN_E-commerce_From_Scratch\\proshop\\frontend\\src\\screens\\PlaceOrderScreen.js":"30","D:\\Citi\\Udemy_Business\\MERN_E-commerce_From_Scratch\\proshop\\frontend\\src\\reducers\\orderReducer.js":"31","D:\\Citi\\Udemy_Business\\MERN_E-commerce_From_Scratch\\proshop\\frontend\\src\\constants\\orderConstants.js":"32","D:\\Citi\\Udemy_Business\\MERN_E-commerce_From_Scratch\\proshop\\frontend\\src\\actions\\orderActions.js":"33","D:\\Citi\\Udemy_Business\\MERN_E-commerce_From_Scratch\\proshop\\frontend\\src\\screens\\OrderScreen.js":"34","D:\\Citi\\Udemy_Business\\MERN_E-commerce_From_Scratch\\proshop\\frontend\\src\\screens\\UserListScreen.js":"35","D:\\Citi\\Udemy_Business\\MERN_E-commerce_From_Scratch\\proshop\\frontend\\src\\screens\\UserEditScreen.js":"36","D:\\Citi\\Udemy_Business\\MERN_E-commerce_From_Scratch\\proshop\\frontend\\src\\screens\\ProductListScreen.js":"37","D:\\Citi\\Udemy_Business\\MERN_E-commerce_From_Scratch\\proshop\\frontend\\src\\screens\\ProductEditScreen.js":"38","D:\\Citi\\Udemy_Business\\MERN_E-commerce_From_Scratch\\proshop\\frontend\\src\\screens\\OrderListScreen.js":"39"},{"size":587,"mtime":1612307658193,"results":"40","hashOfConfig":"41"},{"size":362,"mtime":499162500000,"results":"42","hashOfConfig":"41"},{"size":2564,"mtime":1614638836717,"results":"43","hashOfConfig":"41"},{"size":2189,"mtime":1614555308555,"results":"44","hashOfConfig":"41"},{"size":320,"mtime":1611093825440,"results":"45","hashOfConfig":"41"},{"size":1044,"mtime":1612392551578,"results":"46","hashOfConfig":"41"},{"size":2476,"mtime":1613910364121,"results":"47","hashOfConfig":"41"},{"size":3744,"mtime":1612478997261,"results":"48","hashOfConfig":"41"},{"size":808,"mtime":1611615029768,"results":"49","hashOfConfig":"41"},{"size":1801,"mtime":1611098931711,"results":"50","hashOfConfig":"41"},{"size":2591,"mtime":1614454138637,"results":"51","hashOfConfig":"41"},{"size":1052,"mtime":1614454057103,"results":"52","hashOfConfig":"41"},{"size":3614,"mtime":1614454553576,"results":"53","hashOfConfig":"41"},{"size":250,"mtime":1612392457484,"results":"54","hashOfConfig":"41"},{"size":406,"mtime":1612479104774,"results":"55","hashOfConfig":"41"},{"size":3612,"mtime":1613919227624,"results":"56","hashOfConfig":"41"},{"size":1291,"mtime":1613692208289,"results":"57","hashOfConfig":"41"},{"size":278,"mtime":1613692080250,"results":"58","hashOfConfig":"41"},{"size":1255,"mtime":1613333356920,"results":"59","hashOfConfig":"41"},{"size":3564,"mtime":1614119777821,"results":"60","hashOfConfig":"41"},{"size":1508,"mtime":1614119694643,"results":"61","hashOfConfig":"41"},{"size":2223,"mtime":1612912297548,"results":"62","hashOfConfig":"41"},{"size":347,"mtime":1612734621136,"results":"63","hashOfConfig":"41"},{"size":6277,"mtime":1614554128140,"results":"64","hashOfConfig":"41"},{"size":3244,"mtime":1612912297548,"results":"65","hashOfConfig":"41"},{"size":5666,"mtime":1613691528682,"results":"66","hashOfConfig":"41"},{"size":2824,"mtime":1614031177823,"results":"67","hashOfConfig":"41"},{"size":1298,"mtime":1613083125074,"results":"68","hashOfConfig":"41"},{"size":1829,"mtime":1613427274023,"results":"69","hashOfConfig":"41"},{"size":5111,"mtime":1614117632490,"results":"70","hashOfConfig":"41"},{"size":3639,"mtime":1614638779466,"results":"71","hashOfConfig":"41"},{"size":1318,"mtime":1614638680615,"results":"72","hashOfConfig":"41"},{"size":4855,"mtime":1614638963812,"results":"73","hashOfConfig":"41"},{"size":7278,"mtime":1614639819183,"results":"74","hashOfConfig":"41"},{"size":3159,"mtime":1614204479539,"results":"75","hashOfConfig":"41"},{"size":3569,"mtime":1614447649561,"results":"76","hashOfConfig":"41"},{"size":3998,"mtime":1614453944909,"results":"77","hashOfConfig":"41"},{"size":6190,"mtime":1614457483464,"results":"78","hashOfConfig":"41"},{"size":2923,"mtime":1614638220055,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"4rctty",{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"82"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"82"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"82"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"82"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"82"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"82"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"D:\\Citi\\Udemy_Business\\MERN_E-commerce_From_Scratch\\proshop\\frontend\\src\\index.js",[],["165","166"],"D:\\Citi\\Udemy_Business\\MERN_E-commerce_From_Scratch\\proshop\\frontend\\src\\reportWebVitals.js",[],"D:\\Citi\\Udemy_Business\\MERN_E-commerce_From_Scratch\\proshop\\frontend\\src\\store.js",[],"D:\\Citi\\Udemy_Business\\MERN_E-commerce_From_Scratch\\proshop\\frontend\\src\\App.js",[],"D:\\Citi\\Udemy_Business\\MERN_E-commerce_From_Scratch\\proshop\\frontend\\src\\components\\Footer.js",[],"D:\\Citi\\Udemy_Business\\MERN_E-commerce_From_Scratch\\proshop\\frontend\\src\\screens\\HomeScreen.js",[],"D:\\Citi\\Udemy_Business\\MERN_E-commerce_From_Scratch\\proshop\\frontend\\src\\components\\Header.js",[],"D:\\Citi\\Udemy_Business\\MERN_E-commerce_From_Scratch\\proshop\\frontend\\src\\screens\\ProductScreen.js",[],"D:\\Citi\\Udemy_Business\\MERN_E-commerce_From_Scratch\\proshop\\frontend\\src\\components\\Product.js",[],"D:\\Citi\\Udemy_Business\\MERN_E-commerce_From_Scratch\\proshop\\frontend\\src\\components\\Rating.js",[],"D:\\Citi\\Udemy_Business\\MERN_E-commerce_From_Scratch\\proshop\\frontend\\src\\reducers\\productReducers.js",[],"D:\\Citi\\Udemy_Business\\MERN_E-commerce_From_Scratch\\proshop\\frontend\\src\\constants\\productConstants.js",[],"D:\\Citi\\Udemy_Business\\MERN_E-commerce_From_Scratch\\proshop\\frontend\\src\\actions\\productActions.js",[],"D:\\Citi\\Udemy_Business\\MERN_E-commerce_From_Scratch\\proshop\\frontend\\src\\components\\Message.js",[],"D:\\Citi\\Udemy_Business\\MERN_E-commerce_From_Scratch\\proshop\\frontend\\src\\components\\Loader.js",[],"D:\\Citi\\Udemy_Business\\MERN_E-commerce_From_Scratch\\proshop\\frontend\\src\\screens\\CartScreen.js",[],"D:\\Citi\\Udemy_Business\\MERN_E-commerce_From_Scratch\\proshop\\frontend\\src\\reducers\\cartReducers.js",[],"D:\\Citi\\Udemy_Business\\MERN_E-commerce_From_Scratch\\proshop\\frontend\\src\\constants\\cartConstants.js",[],"D:\\Citi\\Udemy_Business\\MERN_E-commerce_From_Scratch\\proshop\\frontend\\src\\actions\\cartActions.js",[],"D:\\Citi\\Udemy_Business\\MERN_E-commerce_From_Scratch\\proshop\\frontend\\src\\reducers\\userReducers.js",[],"D:\\Citi\\Udemy_Business\\MERN_E-commerce_From_Scratch\\proshop\\frontend\\src\\constants\\userConstants.js",[],"D:\\Citi\\Udemy_Business\\MERN_E-commerce_From_Scratch\\proshop\\frontend\\src\\screens\\LoginScreen.js",[],"D:\\Citi\\Udemy_Business\\MERN_E-commerce_From_Scratch\\proshop\\frontend\\src\\components\\FormContainer.js",[],"D:\\Citi\\Udemy_Business\\MERN_E-commerce_From_Scratch\\proshop\\frontend\\src\\actions\\userActions.js",["167"],"import axios from 'axios'\r\nimport {\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_REGISTER_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_DETAILS_FAIL,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_DETAILS_RESET,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_RESET,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_FAIL,\r\n  USER_DELETE_SUCCESS,\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_FAIL,\r\n} from '../constants/userConstants'\r\nimport {\r\n  ORDER_DETAILS_RESET,\r\n  ORDER_LIST_MY_RESET,\r\n} from '../constants/orderConstants'\r\nimport { CART_RESET } from '../constants/cartConstants'\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LOGIN_REQUEST,\r\n    })\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(\r\n      '/api/users/login',\r\n      { email, password },\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data))\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n  localStorage.removeItem('userInfo')\r\n  dispatch({ type: USER_LOGOUT })\r\n  dispatch({ type: CART_RESET })\r\n  dispatch({ type: USER_DETAILS_RESET })\r\n  dispatch({ type: ORDER_LIST_MY_RESET })\r\n  dispatch({ type: USER_LIST_RESET })\r\n  dispatch({ type: ORDER_DETAILS_RESET })\r\n}\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_REGISTER_REQUEST,\r\n    })\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(\r\n      '/api/users',\r\n      { name, email, password },\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: USER_REGISTER_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data))\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DETAILS_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/users/${id}`, config)\r\n\r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.put(`/api/users/profile`, user, config)\r\n\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LIST_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/users`, config)\r\n\r\n    dispatch({\r\n      type: USER_LIST_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DELETE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.delete(`/api/users/${id}`, config)\r\n\r\n    dispatch({ type: USER_DELETE_SUCCESS })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DELETE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.put(`/api/users/${user._id}`, user, config)\r\n\r\n    dispatch({ type: USER_UPDATE_SUCCESS })\r\n\r\n    dispatch({ type: USER_DETAILS_SUCCESS, payload: data })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_UPDATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n","D:\\Citi\\Udemy_Business\\MERN_E-commerce_From_Scratch\\proshop\\frontend\\src\\screens\\RegisterScreen.js",["168"],"import React, { useState, useEffect } from 'react'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { register } from '../actions/userActions'\r\n\r\nconst RegisterScreen = ({ location, history }) => {\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [confirmPassword, setConfirmPassword] = useState('')\r\n  const [message, setMessage] = useState(null)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userRegister = useSelector((state) => state.userRegister)\r\n  const { loading, error, userInfo } = userRegister\r\n\r\n  const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect)\r\n    }\r\n  }, [history, userInfo, redirect])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    if (password !== confirmPassword) {\r\n      setMessage('Passwords dont match')\r\n    } else {\r\n      dispatch(register(name, email, password))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1>Sign Up</h1>\r\n      {message && <Message variant='danger'>{message}</Message>}\r\n      {error && <Message variant='danger'>{error}</Message>}\r\n      {loading && <Loader />}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='name'>\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control\r\n            type='name'\r\n            placeholder='Enter your name'\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='email'>\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control\r\n            type='email'\r\n            placeholder='Enter your email'\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='password'>\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Enter your password'\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='confirmPassword'>\r\n          <Form.Label>COnfirm Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Confirm your password'\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='primary'>\r\n          Register\r\n        </Button>\r\n      </Form>\r\n\r\n      <Row className='py-3'>\r\n        <Col>\r\n          Have an account already?{' '}\r\n          <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n            Login\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default RegisterScreen\r\n","D:\\Citi\\Udemy_Business\\MERN_E-commerce_From_Scratch\\proshop\\frontend\\src\\screens\\ProfileScreen.js",["169","170"],"import React, { useState, useEffect } from 'react'\r\nimport { Table, Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { listMyOrders } from '../actions/orderActions'\r\n\r\nconst ProfileScreen = ({ location, history }) => {\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [confirmPassword, setConfirmPassword] = useState('')\r\n  const [message, setMessage] = useState(null)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userDetails = useSelector((state) => state.userDetails)\r\n  const { loading, error, user } = userDetails\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const userUpdateProfile = useSelector((state) => state.updateUserProfile)\r\n  const { success } = userUpdateProfile !== undefined ? true : false\r\n\r\n  const orderListMy = useSelector((state) => state.orderListMy)\r\n  const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login')\r\n    } else {\r\n      // if (user === undefined || !user.name) {\r\n      //   dispatch(getUserDetails('profile'))\r\n      //   console.log('dispatch complete', user)\r\n      // } else {\r\n      //   setName(user.name)\r\n      //   setEmail(user.email)\r\n      // }\r\n      setName(userInfo.name)\r\n      setEmail(userInfo.email)\r\n      dispatch(listMyOrders())\r\n    }\r\n  }, [dispatch, history, userInfo, user])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    if (password !== confirmPassword) {\r\n      setMessage('Passwords dont match')\r\n    } else {\r\n      dispatch(updateUserProfile({ id: userInfo._id, name, email, password }))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={3}>\r\n        <h2>User Profile</h2>\r\n        {message && <Message variant='danger'>{message}</Message>}\r\n        {error && <Message variant='danger'>{error}</Message>}\r\n        {/* {success && <Message variant='variant'>Profile Updated!</Message>} */}\r\n        {loading && <Loader />}\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId='name'>\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control\r\n              type='name'\r\n              placeholder='Enter your name'\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId='email'>\r\n            <Form.Label>Email Address</Form.Label>\r\n            <Form.Control\r\n              type='email'\r\n              placeholder='Enter your email'\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId='password'>\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type='password'\r\n              placeholder='Enter your password'\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId='confirmPassword'>\r\n            <Form.Label>Confirm Password</Form.Label>\r\n            <Form.Control\r\n              type='password'\r\n              placeholder='Confirm your password'\r\n              value={confirmPassword}\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Button type='submit' variant='primary'>\r\n            Update\r\n          </Button>\r\n        </Form>\r\n      </Col>\r\n      <Col md={9}>\r\n        <h2>My Orders</h2>\r\n        {loadingOrders ? (\r\n          <Loader />\r\n        ) : errorOrders ? (\r\n          <Message variant='danger'>{errorOrders}</Message>\r\n        ) : (\r\n          <Table stripped bordered hover responsive className='table-sm'>\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>DATE</th>\r\n                <th>TOTAL</th>\r\n                <th>PAID</th>\r\n                <th>DELIVERED</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {orders.map((order) => (\r\n                <tr key={order._id}>\r\n                  <td>{order._id}</td>\r\n                  <td>{order.createdAt.substring(0, 10)}</td>\r\n                  <td>{order.totalPrice}</td>\r\n                  <td>\r\n                    {order.isPaid ? (\r\n                      order.paidAt.substring(0, 10)\r\n                    ) : (\r\n                      <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {order.isDelivered ? (\r\n                      order.deliveredAt.substring(0, 10)\r\n                    ) : (\r\n                      <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    <LinkContainer to={`/order/${order._id}`}>\r\n                      <Button className='btn-sm' variant='light'>\r\n                        Details\r\n                      </Button>\r\n                    </LinkContainer>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        )}\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default ProfileScreen\r\n","D:\\Citi\\Udemy_Business\\MERN_E-commerce_From_Scratch\\proshop\\frontend\\src\\screens\\ShippingScreen.js",["171"],"import React, { useState } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { saveShippingAddress } from '../actions/cartActions'\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n  const cart = useSelector((state) => state.cart)\r\n  // const shippingAddress =\r\n  //   cart.shippingAddress === null\r\n  //     ? { address: '', city: '', postalCode: '', country: '' }\r\n  //     : cart.shippingAddress\r\n  const shippingAddress = { address: '', city: '', postalCode: '', country: '' }\r\n\r\n  const [address, setAddress] = useState(shippingAddress.address)\r\n  const [city, setCity] = useState(shippingAddress.city)\r\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n  const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(saveShippingAddress({ address, city, postalCode, country }))\r\n    history.push('/payment')\r\n  }\r\n\r\n  return (\r\n    <FormContainer>\r\n      <CheckoutSteps step1 step2 />\r\n      <h1>Shipping</h1>\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='address'>\r\n          <Form.Label>Address</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter your address'\r\n            value={address}\r\n            required\r\n            onChange={(e) => setAddress(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='city'>\r\n          <Form.Label>City</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter your city'\r\n            value={city}\r\n            required\r\n            onChange={(e) => setCity(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='postalCode'>\r\n          <Form.Label>Postal Code</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter your postal code'\r\n            value={postalCode}\r\n            required\r\n            onChange={(e) => setPostalCode(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='country'>\r\n          <Form.Label>Country</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter your Country'\r\n            value={country}\r\n            required\r\n            onChange={(e) => setCountry(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='primary'>\r\n          Continue\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default ShippingScreen\r\n","D:\\Citi\\Udemy_Business\\MERN_E-commerce_From_Scratch\\proshop\\frontend\\src\\components\\CheckoutSteps.js",[],"D:\\Citi\\Udemy_Business\\MERN_E-commerce_From_Scratch\\proshop\\frontend\\src\\screens\\PaymentScreen.js",[],"D:\\Citi\\Udemy_Business\\MERN_E-commerce_From_Scratch\\proshop\\frontend\\src\\screens\\PlaceOrderScreen.js",["172","173"],"import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { createOrder } from '../actions/orderActions'\r\n\r\nconst PlaceOrderScreen = ({ history }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const cart = useSelector((state) => state.cart)\r\n\r\n  const addDecimals = (num) => {\r\n    return (Math.round(num * 100) / 100).toFixed(2)\r\n  }\r\n\r\n  cart.itemsPrice = addDecimals(\r\n    cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n  )\r\n  cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100)\r\n  cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)))\r\n  cart.totalPrice = (\r\n    Number(cart.itemsPrice) +\r\n    Number(cart.shippingPrice) +\r\n    Number(cart.taxPrice)\r\n  ).toFixed(2)\r\n\r\n  const orderCreate = useSelector((state) => state.orderCreate)\r\n  const { order, success, error } = orderCreate\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      history.push(`/order/${order._id}`)\r\n    }\r\n  }, [history, success])\r\n\r\n  const placeOrderHandler = () => {\r\n    dispatch(\r\n      createOrder({\r\n        orderItems: cart.cartItems,\r\n        shippingAddress: cart.shippingAddress,\r\n        paymentMethod: cart.paymentMethod,\r\n        itemsPrice: cart.itemsPrice,\r\n        shippingPrice: cart.shippingPrice,\r\n        taxPrice: cart.taxPrice,\r\n        totalPrice: cart.totalPrice,\r\n      })\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <CheckoutSteps step1 step2 step3 step4 />\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Address:</strong>\r\n                {cart.shippingAddress.address}, {cart.shippingAddress.city}{' '}\r\n                {cart.shippingAddress.postalCode},{' '}\r\n                {cart.shippingAddress.country}\r\n              </p>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <strong>Method: </strong>\r\n              {cart.paymentMethod}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {cart.cartItems.length === 0 ? (\r\n                <Message>Your Cart is Empty!</Message>\r\n              ) : (\r\n                <ListGroup variant='flush'>\r\n                  {cart.cartItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${cart.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${cart.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${cart.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${cart.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Button\r\n                  type='button'\r\n                  className='btn-block'\r\n                  disabled={cart.cartItems === 0}\r\n                  onClick={placeOrderHandler}\r\n                >\r\n                  Place Order\r\n                </Button>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PlaceOrderScreen\r\n","D:\\Citi\\Udemy_Business\\MERN_E-commerce_From_Scratch\\proshop\\frontend\\src\\reducers\\orderReducer.js",[],"D:\\Citi\\Udemy_Business\\MERN_E-commerce_From_Scratch\\proshop\\frontend\\src\\constants\\orderConstants.js",[],"D:\\Citi\\Udemy_Business\\MERN_E-commerce_From_Scratch\\proshop\\frontend\\src\\actions\\orderActions.js",[],"D:\\Citi\\Udemy_Business\\MERN_E-commerce_From_Scratch\\proshop\\frontend\\src\\screens\\OrderScreen.js",["174"],"D:\\Citi\\Udemy_Business\\MERN_E-commerce_From_Scratch\\proshop\\frontend\\src\\screens\\UserListScreen.js",[],"D:\\Citi\\Udemy_Business\\MERN_E-commerce_From_Scratch\\proshop\\frontend\\src\\screens\\UserEditScreen.js",["175"],"import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { getUserDetails, updateUser } from '../actions/userActions'\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\r\n\r\nconst UserEditScreen = ({ match, history }) => {\r\n  const userId = match.params.id\r\n\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [isAdmin, setIsAdmin] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userDetails = useSelector((state) => state.userDetails)\r\n  const { loading, error, user } = userDetails\r\n  const userInfo = userDetails.userInfo\r\n\r\n  const userUpdate = useSelector((state) => state.userUpdate)\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = userUpdate\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: USER_UPDATE_RESET })\r\n      history.push('/admin/userList')\r\n    } else {\r\n      if (user === undefined || !user.name || user._id !== userId) {\r\n        dispatch(getUserDetails(userId))\r\n      } else {\r\n        setName(user.name)\r\n        setEmail(user.email)\r\n        setIsAdmin(user.isAdmin)\r\n      }\r\n    }\r\n    // if (userInfo !== undefined) {\r\n    //   setName(userInfo.name)\r\n    //   setEmail(userInfo.email)\r\n    //   setIsAdmin(userInfo.isAdmin)\r\n    // } else {\r\n    //   dispatch(getUserDetails(userId))\r\n    // }\r\n  }, [dispatch, history, userId, user, successUpdate])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(updateUser({ _id: userId, name, email, isAdmin }))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Link to='/admin/userList' className='btn btn-light my-3'>\r\n        Go Back\r\n      </Link>\r\n\r\n      <FormContainer>\r\n        <h1>Edit User</h1>\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant='danger'>{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='name'>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type='name'\r\n                placeholder='Enter your name'\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='email'>\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control\r\n                type='email'\r\n                placeholder='Enter your email'\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='isAdmin'>\r\n              <Form.Label>Is Admin</Form.Label>\r\n              <Form.Control\r\n                type='checkbox'\r\n                value={isAdmin}\r\n                checked={isAdmin}\r\n                onChange={(e) => setIsAdmin(e.target.checked)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='primary'>\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserEditScreen\r\n","D:\\Citi\\Udemy_Business\\MERN_E-commerce_From_Scratch\\proshop\\frontend\\src\\screens\\ProductListScreen.js",[],"D:\\Citi\\Udemy_Business\\MERN_E-commerce_From_Scratch\\proshop\\frontend\\src\\screens\\ProductEditScreen.js",[],"D:\\Citi\\Udemy_Business\\MERN_E-commerce_From_Scratch\\proshop\\frontend\\src\\screens\\OrderListScreen.js",[],{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","replacedBy":"179"},{"ruleId":"180","severity":1,"message":"181","line":236,"column":13,"nodeType":"182","messageId":"183","endLine":236,"endColumn":17},{"ruleId":"180","severity":1,"message":"184","line":2,"column":16,"nodeType":"182","messageId":"183","endLine":2,"endColumn":24},{"ruleId":"180","severity":1,"message":"185","line":7,"column":10,"nodeType":"182","messageId":"183","endLine":7,"endColumn":24},{"ruleId":"180","severity":1,"message":"186","line":26,"column":11,"nodeType":"182","messageId":"183","endLine":26,"endColumn":18},{"ruleId":"180","severity":1,"message":"187","line":9,"column":9,"nodeType":"182","messageId":"183","endLine":9,"endColumn":13},{"ruleId":"180","severity":1,"message":"188","line":1,"column":17,"nodeType":"182","messageId":"183","endLine":1,"endColumn":25},{"ruleId":"189","severity":1,"message":"190","line":36,"column":6,"nodeType":"191","endLine":36,"endColumn":24,"suggestions":"192"},{"ruleId":"189","severity":1,"message":"193","line":65,"column":6,"nodeType":"191","endLine":65,"endColumn":60,"suggestions":"194"},{"ruleId":"180","severity":1,"message":"195","line":22,"column":9,"nodeType":"182","messageId":"183","endLine":22,"endColumn":17},"no-native-reassign",["196"],"no-negated-in-lhs",["197"],"no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","'getUserDetails' is defined but never used.","'success' is assigned a value but never used.","'cart' is assigned a value but never used.","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'order._id'. Either include it or remove the dependency array.","ArrayExpression",["198"],"React Hook useEffect has missing dependencies: 'history' and 'userInfo'. Either include them or remove the dependency array.",["199"],"'userInfo' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"200","fix":"201"},{"desc":"202","fix":"203"},"Update the dependencies array to be: [history, order._id, success]",{"range":"204","text":"205"},"Update the dependencies array to be: [dispatch, orderId, successPay, successDeliver, order, userInfo, history]",{"range":"206","text":"207"},[1215,1233],"[history, order._id, success]",[2117,2171],"[dispatch, orderId, successPay, successDeliver, order, userInfo, history]"]